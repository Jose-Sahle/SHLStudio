SELECT
	 COL.COLUMN_NAME AS COLUMNNAME
	,CASE WHEN POSITION('nextval' in column_default) > 0 THEN 1 ELSE 0 END AS IS_IDENTITY
	,CASE WHEN EXISTS 
	(
		SELECT 1
		FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS PK 
		INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
			ON    PK.CONSTRAINT_NAME = TC.CONSTRAINT_NAME
			AND  PK.TABLE_NAME = TC.TABLE_NAME
			AND  PK.TABLE_SCHEMA = TC.TABLE_SCHEMA
		WHERE PK.TABLE_SCHEMA = COL.TABLE_SCHEMA
		AND PK.TABLE_NAME = COL.TABLE_NAME
		AND TC.CONSTRAINT_TYPE = 'PRIMARY KEY'
		AND PK.COLUMN_NAME = COL.COLUMN_NAME
		AND PK.TABLE_SCHEMA = COL.TABLE_SCHEMA
		AND PK.TABLE_NAME = COL.TABLE_NAME
		) THEN 1 ELSE 0 END AS IS_PRIMARYKEY
	,CASE WHEN EXISTS
	(
		SELECT 1
		FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS PK 
		INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
			ON    PK.CONSTRAINT_NAME = TC.CONSTRAINT_NAME
			AND  PK.TABLE_NAME = TC.TABLE_NAME
			AND  PK.TABLE_SCHEMA = TC.TABLE_SCHEMA
		WHERE PK.TABLE_SCHEMA = COL.TABLE_SCHEMA
		AND PK.TABLE_NAME = COL.TABLE_NAME
		AND TC.CONSTRAINT_TYPE <> 'PRIMARY KEY'
		AND PK.COLUMN_NAME = COL.COLUMN_NAME
		AND PK.TABLE_SCHEMA = COL.TABLE_SCHEMA
		AND PK.TABLE_NAME = COL.TABLE_NAME
	) THEN 1 ELSE 0 END 	AS IS_FOREIGNKEY
	,(
		SELECT   
			CCU.TABLE_NAME AS FOREIGN_TABLE_NAME
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS TC 
		JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS KCU 
			ON TC.CONSTRAINT_NAME = KCU.CONSTRAINT_NAME
		JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS CCU 
			ON CCU.CONSTRAINT_NAME = TC.CONSTRAINT_NAME
		WHERE CONSTRAINT_TYPE = 'FOREIGN KEY' 
			AND TC.TABLE_CATALOG = COL.TABLE_CATALOG
			AND TC.TABLE_NAME = COL.TABLE_NAME
			AND TC.TABLE_SCHEMA = COL.TABLE_SCHEMA
			AND CCU.COLUMN_NAME = COL.COLUMN_NAME
	) As TABLE_FOREIGNKEY
	, CASE 
		WHEN lower(COL.DATA_TYPE) = 'smallserial' THEN 'Int32'
		WHEN lower(COL.DATA_TYPE) = 'smallint' THEN 'Int16'
		WHEN lower(COL.DATA_TYPE) = 'int' THEN 'Int32'
		WHEN lower(COL.DATA_TYPE) = 'serial' THEN 'Int32'
		WHEN lower(COL.DATA_TYPE) = 'integer' THEN 'Int32'
		WHEN lower(COL.DATA_TYPE) = 'bigint' THEN 'Int64'
		WHEN lower(COL.DATA_TYPE) = 'bigserial' THEN 'Int64'
		
		WHEN lower(COL.DATA_TYPE) = 'decimal' THEN 'Double'
		WHEN lower(COL.DATA_TYPE) = 'numeric' THEN 'Double'
		WHEN lower(COL.DATA_TYPE) = 'float' THEN 'Double'
		WHEN lower(COL.DATA_TYPE) = 'double' THEN 'Double'
		WHEN lower(COL.DATA_TYPE) = 'real' THEN 'Double'
		WHEN lower(COL.DATA_TYPE) = 'double precision' THEN 'Double'
		WHEN lower(COL.DATA_TYPE) = 'money' THEN 'Double'

		WHEN lower(COL.DATA_TYPE) = 'char' THEN 'String'
		WHEN lower(COL.DATA_TYPE) = 'character' THEN 'String'
		WHEN lower(COL.DATA_TYPE) = 'varchar' THEN 'String'
		WHEN lower(COL.DATA_TYPE) = 'character varying' THEN 'String'
		WHEN lower(COL.DATA_TYPE) = 'text' THEN 'String'
		
		WHEN lower(COL.DATA_TYPE) = 'bytea' THEN 'Binary'
		
		WHEN lower(COL.DATA_TYPE) = 'date' THEN 'DateTime'
		WHEN lower(COL.DATA_TYPE) = 'time' THEN 'DateTime2'
		WHEN lower(COL.DATA_TYPE) = 'timestamp' THEN 'DateTime3'
		WHEN lower(COL.DATA_TYPE) = 'time without time zone' THEN 'DateTime4'
		
		WHEN lower(COL.DATA_TYPE) = 'boolean' THEN 'Boolean'
		
		ELSE 'Int32'
	 END AS DATA_TYPE
	,CASE WHEN COL.CHARACTER_MAXIMUM_LENGTH IS NULL THEN 0 ELSE  COL.CHARACTER_MAXIMUM_LENGTH END AS DATA_SIZE
FROM INFORMATION_SCHEMA.COLUMNS COL
WHERE	COL.TABLE_CATALOG = '#DatabaseName#'
AND 	COL.TABLE_NAME = '#TableName#'
AND		COL.TABLE_SCHEMA = 'public'
ORDER BY ORDINAL_POSITION
